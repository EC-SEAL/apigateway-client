swagger: '2.0'
info:
  title: "APIGatewayClient (SEAL Service Microservice Specification)"
  version: 0.0.2
  description: "This document contains the formal specification of the API Gateway Client interface in SEAL Service.
  
  **Take into account that parameters marked as cookie type, will instead be passed through the session object**
  "
 
tags:
    - name: "APIGatewayClient"
      description: ""
    
paths:

####### APIGatewayClient #######

  /cl/list/{collection}:
    get:
      tags:
        - APIGatewayClient
      summary: Get a collection of elements to be displayed on the selector widget.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "collection"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Incoming list"
          schema:
            $ref: "#/definitions/displayableList"
        404:
          description: "Collection not found"
          
          
  /cl/session/start:
    get:
      tags:
        - APIGatewayClient
      summary: Start a session on the server, receive the session token for later reference. SessionId to be returned on the payload
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID" #To retake a session in case it already exists
          in: "query"
          required: false
          type: string
      responses:
        200:
          description: "Session started"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Session start error"

          
  /cl/session/end:
    get:
      tags:
        - APIGatewayClient
      summary: End a session on the server, receive the session token for later reference.
      description: _
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
      responses:
        200:
          description: "Session ended"
        404:
          description: "Session end error"

          
  /cl/auth/{moduleID}/login:
    get:
      tags:
        - APIGatewayClient
      summary: Login through a specifc auth method module.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"
          

  /cl/auth/{moduleID}/logout:
    get:
      tags:
        - APIGatewayClient
      summary: Logout through a specifc auth method module.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"


  /cl/auth/logout:
    get:
      tags:
        - APIGatewayClient
      summary: Logout from all logged-in modules (chain logout calls for all modules).
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

          
  /cl/persistence/{moduleID}/load:
    get:
      tags:
        - APIGatewayClient
      summary: Load store with a specific persistence method module.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

          
  /cl/persistence/{moduleID}/store:
    get:
      tags:
        - APIGatewayClient
      summary: Save user data on a store with a specific auth method module.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

          
  /cl/ident/source/{moduleID}/retrieve:
    get:
      tags:
        - APIGatewayClient
      summary: Fetch user identity data on the session store with a specific identity method module.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

  /cl/ident/source/{moduleID}/load:
    post:
      tags:
        - APIGatewayClient
      summary: Load an identity dataset retrieved on a client-side module. Notice that in this case the client must be trusted, so be careful when integrating sources with this api.
      description: _
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
        - name: dataset
          in: body
          description: The data set to add
          required: true
          schema:
            $ref: '#/definitions/dataSet'
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"
          
  /cl/ident/derivation/{moduleID}/generate:
    get:
      tags:
        - APIGatewayClient
      summary: Generate a derived identity through a specific method module.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"


  /cl/ident/mgr/list:
    get:
      tags:
        - APIGatewayClient
      summary: Get the list of user identity data sets currently    loaded or fetched in session.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
      responses:
        200:
          description: "Incoming list"
          schema:
            $ref: "#/definitions/dataStore"
        404:
          description: "Collection not found"
                    
          
  /cl/ident/mgr/{datasetID}/refresh:
    get:
      tags:
        - APIGatewayClient
      summary: Update a retrieved or derived identity already on the session store through the specific method module used to obtain it.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "datasetID"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

          
  /cl/ident/mgr/{datasetID}/delete:
    get:
      tags:
        - APIGatewayClient
      summary: Delete a retrieved or derived identity already on the session store through the specific method module used to obtain it.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "datasetID"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

          
  /cl/ident/mgr/{datasetID}/revoke:
    get:
      tags:
        - APIGatewayClient
      summary: Revoke a retrieved or derived identity already on the session store through the specific method module used to obtain it.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "datasetID"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

          
  /cl/ident/linking/{moduleID}/request:
    post:
      tags:
        - APIGatewayClient
      summary: Request two data sets to be reconciled through a specific method module.
      description: _
      produces:
        - "application/json"
      consumes:
        - "application/x-www-form-urlencoded"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
        - name: "datasetIDa"  
          in: "formData"
          required: true
          type: string
        - name: "datasetIDb"  
          in: "formData"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

          
  /cl/ident/linking/{moduleID}/{requestId}/status:
    get:
      tags:
        - APIGatewayClient
      summary: Request the status of a reconciliation request to a specific method module.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
        - name: "requestId"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

          
  /cl/ident/linking/{moduleID}/{requestId}/cancel:
    get:
      tags:
        - APIGatewayClient
      summary: Request to cancel a reconciliation request on a specific method module.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
        - name: "requestId"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

          
  /cl/ident/linking/{moduleID}/{requestId}/result:
    get:
      tags:
        - APIGatewayClient
      summary: Fetch the result of a reconciliation request to a specific method module.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
        - name: "requestId"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

          
  /cl/ident/linking/{moduleID}/{requestId}/files/upload:
    post:
      tags:
        - APIGatewayClient
      summary: Upload a supporting file to a specific method module.
      description: _
      produces:
        - "application/json"
      consumes:
        - "multipart/form-data"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
        - name: "requestId"  
          in: "path"
          required: true
          type: string
        - name: "file"  
          in: "formData"
          required: true
          type: file
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

          
  /cl/ident/linking/{moduleID}/{requestId}/messages/send:
    post:
      tags:
        - APIGatewayClient
      summary: Send a message to a validation officer on a specific method module.
      description: _
      produces:
        - "application/json"
      consumes:
        - "application/x-www-form-urlencoded"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
        - name: "requestId"  
          in: "path"
          required: true
          type: string
        - name: "message"  
          in: "formData"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

          
  /cl/ident/linking/{moduleID}/{requestId}/messages/receive:
    get:
      tags:
        - APIGatewayClient
      summary: Receive messages from a validation officer on a specific method module (on the response payload as a conversation object).
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"  
          in: "path"
          required: true
          type: string
        - name: "requestId"  
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

          
  /cl/vc/issuing/{moduleID}/generate:
    get:
      tags:
        - APIGatewayClient
      summary: Generate a verifiable claim through a specific method module.
      description: _
      produces:
        - "application/json"
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "moduleID"
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Module access trigger"
          schema:
            $ref: "#/definitions/moduleTrigger"
        404:
          description: "Error accessing module"

  /cl/callback:
    get:
      tags:
        - APIGatewayClient
      summary: Set in Session the Return page in the client when invoking modules. This URL under the control of the client will allow it to retake control of the flow. ** Client must expect a msToken on the callback url **
      description: _
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "ClientCallbackAddr"
          in: "query"
          required: true
          description: the actual callback url the modules will call when returning control to the client
          type: string            
      responses:
        200:
          description: "Callback registered"
        404:
          description: "Error registering callback"
          
          
          
  /cl/token/validate:
    get:
      tags:
        - APIGatewayClient
      summary: Now the callback address is on the client domain, the client will need some endpoint to validate the msToken the module will send along when calling the callback, to secure the app flow. The client will send the msToken to the api gw for validation through this call.
      description: _
      parameters:
        - name: "sessionID"
          in: "query"
          required: true
          type: string
        - name: "msToken"
          in: "query"
          required: true
          description: B64 string with the received msToken
          type: string            
      responses:
        200:
          description: "msToken is legitimate"
        403:
          description: "msToken is invalid"
        404:
          description: "Error validating token"
  
          



####### APIGateway #######

definitions:

  moduleTrigger:
    description: Response object of the API GW. Returns data, status and commands how to deal the loading of a specific module
    type: object
    properties:
      payload:
        type: object
        description: Response data. Any object format
      status:
        type: object
        description: Status of the response
        properties:
          message:
            type: string
          mainCode:
            type: string
          secondaryCode:
            type: string
      access:
        type: object
        description: If the response commands the client to access elsewhere, this field will tell where and how
        properties:
          binding:
            type: string
            description: Mechanism to access the delegated resource
            enum:
              - HTTP-POST-REDIRECT
              - HTTP-GET-REDIRECT
              - HTTP-GET
              - HTTP-POST
              - HTTP-GET-SIG
              - HTTP-POST-SIG
          address:
            type: string
            description: the URL of the resource
          contentType:
            type: string
            description: the MIME type of the body, if any
          bodyContent:
            type: string
            description: If the access method requires to transfer data on the body of the request, it will be written here
            
####### Revocation #######

  displayableList:
    type: array
    items:
      type: object #Generic object, collections will be from a
                   #base common "displayable" class, but I think this does not
                   #support inheritance
                   

####### Persistence #######

  dataSet:
    description: Object representing a generic identity data set, retrieved from some source and stored on a user store.
    type: object
    properties:
      id:
        description: Unique identifier of the set
        type: string
        example: "6c0f70a8-f32b-4535-b5f6-0d596c52813a"
      type:
        description: To define different kinds of datasets, to establish classifications
        type: string
      categories:
        description: To define multiple classes where the data set can be grouped.
        type: array
        items:
          type: string
      issuerId:
        description: Name of the attribute that is the ID of the entity that issued the data set, a kind of pointer to the property ID.
        type: string
      subjectId:
        description: Name of the attribute that is the ID of the data owner, a kind of pointer to the attribute ID.
        type: string
      loa:
        description: Level of assurance of the authenticity of the data/authentication
        type: string
      issued:
        description: Date when the data set was retrieved from its source
        type: string
        example: "2018-12-06T19:40:16Z"
      expiration:
        description: Maximum validity date of the set (empty means permanent)
        type: string
        example: "2018-12-06T19:45:16Z"
      attributes:
        description: The list of the identity attributes or claims contained on the set
        type: array
        items:
            $ref: '#/definitions/attributeType'
      properties:
        description: Dictionary of additional fields of data related to the attributes in the set(strings only) for any specific purpose.
        type: object
        #Indicates free-form object
        additionalProperties:
            type: string       
            
  dataStore:
    type: object
    description: Represents a clear, encrypted and/or signed data set.
    properties:
      id:
        description: Unique identifier of the set
        type: string
        example: "6c0f70a8-f32b-4535-b5f6-0d596c52813a"
      encryptedData:
        type: string
        description: If the data store is encrypted, this will be set. B64 string
      signature:
        type: string
        description: If the data store is signed, signature goes here. B64 string. Sign always the decrypted dataset.
      signatureAlgorithm:
        type: string
        description: Descriptor of the signature algorithm used.
      encryptionAlgorithm:
        description: Descriptor of the encryption algorithm used.
        type: string
      clearData:
        description: If the data store is in cleartext, this will be set
        type: array
        items: 
          $ref: '#/definitions/dataSet'


  attributeType:
    description: Contents of an attribute item.
    type: object
    properties:
      name:
        description: Unique class identifier of the attribute
        type: string
        example: "http://eidas.europa.eu/attributes/naturalperson/CurrentGivenName"
      friendlyName:
        description: Class identifier of the attribute (short version, might have collisions)
        type: string
        example: "CurrentGivenName"
      encoding:
        description: String identifying the encoding method:"UTF-8" , "BASE64", etc.
        type: string
        example: "plain"
      language:
        description: String identifying the language code of the value contents
        type: string
        example: "ES_es"
      mandatory:
        description: To mark the mandatoriness of the attribute.
        type: boolean
        example: true
      values:
        description: List of values for the attribute
        type: array
        items:
          type: string
        example: ["JOHN"]


  attributeTypeList:
      type: array
      items: 
        $ref: '#/definitions/attributeType'
        
  ####### RequestManager #######

 # Descriptor Object for an Attribute Set (a data request or response)
  attributeSet:
    description: Object representing a generic request/response. Used for in-application transference of the security assertions or claims containing trusted user information (attribute values); also to set the list of attributes to be requested.
    type: object
    properties:
      id:
        description: Unique identifier of the set
        type: string
        example: "6c0f70a8-f32b-4535-b5f6-0d596c52813a"
      type:
        description: Kind of set
        type: string
        enum:
            - Request
            - Response
            - AuthResponse
        example: "Response"
      issuer:
        description: ID of the External Entity which issued the set
        type: string
        example: "https://esmo.uji.es/gw/saml/idp/metadata.xml"
      recipient:
        description: ID of the External Entity which the set is addressed to
        type: string
        example: "https://esmo.uji.es/gw/saml/sp/metadata.xml"
      inResponseTo:
        description: In response objects, the ID of the request which the set is responding to
        type: string
        example: "aaaa70a8-f32b-4535-b5f6-0d596cbbbbb"
      loa:
        description: Level of trust of the authentication related to the set, if it is a response for an eIDAS authentication request
        type: string
        example: "http://eidas.europa.eu/LoA/substantial"
      notBefore:
        description: Minimum validity date of the set
        type: string
        example: "2018-12-06T19:40:16Z"
      notAfter:
        description: Maximum validity date of the set
        type: string
        example: "2018-12-06T19:45:16Z"
      status:
        description: "To represent the tatus of the set (ok, error, etc.)."
        $ref: '#/definitions/attributeSetStatus'
      attributes:
        description: The list of the attributes or claims related to the user, contained on the set
        type: array
        items:
            $ref: '#/definitions/attributeType'
      properties:
        description: Dictionary of additional fields of data related to the attributes in the set(strings only), specific for a certain entity type or protocol. List of useful metadata related to the attributes and any specific information that came with the remote SP/RP request (or was filled in with metadata stored presets for said SP/RP) and might be of need for some implementation of the local SP to issue the authentication request.
        type: object
        #Indicates free-form object
        additionalProperties:
            type: string       

            
  attributeSetStatus:
    type: object
    properties:
      code:
        description: main standard status code from a closed list.
        type: string
        enum:
            - OK
            - ERROR
      subcode:
        description: free text field to represent status codes, open for specific applications or fluxes.
        type: string
      message:
        description: a free text string to provide human-readable status-error information
        type: string

            
            
  attributeSetList:
      type: array
      items: 
        $ref: '#/definitions/attributeSet'
        
        
  ####### IDLinking #######

  fileObject:
    type: object
    properties:
      filename:
        type: string
      fileID:
        type: string
      contentType:
        type: string
        description: MIME type of the file content
      fileSize:
        type: integer
      content:
        type: string
        format: byte    
        description: If not empty, the b64 encoded content of the file.



  fileList:
    description: List of file metadata objects
    type: array
    items:
      $ref: '#/definitions/fileObject'



  linkRequest:
    description: Represents a linking request, as well as its resolution and the resulting linking dataset
    type: object
    properties:
      id:
        description: Unique identifier of the set
        type: string
        example: "6c0f70a8-f32b-4535-b5f6-0d596c52813a"
      issuer:
        description: Name of the entity that issued the link.
        type: string
      lloa: 
        description: Level of certainty that both subjects are the same person
        type: string
      issued:
        description: Date when the link was certified (the date this data set was issued)
        type: string
        example: "2018-12-06T19:40:16Z"
      type:
        description: Type of set.
        type: string
      expiration:
        description: Maximum validity date of the link (empty means permanent)
        type: string
        example: "2018-12-06T19:45:16Z"
      datasetA:
        description: The dataset containing identity attributes or claims set A
        $ref: '#/definitions/dataSet'
      datasetB:
        description: The dataset containing identity attributes or claims set B
        $ref: '#/definitions/dataSet'
      evidence:
        type: array
        description: List of additional files uploaded to the validator to check the person behind the identities
        items:
            $ref: '#/definitions/fileObject'
      conversation:
        type: array
        description: List of messages exchanged between the requester and the validation officer
        items:
            $ref: '#/definitions/message'



  linkRequestList:
    description: List of linking requests
    type: array
    items:
      $ref: '#/definitions/linkRequest'
      
  message:
    type: object
    properties:
      timestamp:
        type: integer
        description: date and time when the message was sent
      sender:
        type: string
        description: Identifier of the user who sent the message
      senderType:
        type: string
        description: Identifier of the user category who sent the message
      recipient:
        type: string
        description: Identifier of the user whom the message is addressed to
      recipientType:
        type: string
        description: Identifier of the user category whom the message is addressed to
      message:
        type: string
        description: Content of the message
 


  